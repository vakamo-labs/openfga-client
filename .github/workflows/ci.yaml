on:
  push:
    branches: ["main", "openfga-client-*.x"]
  pull_request:
    branches: ["main", "openfga-client-*.x"]
  
name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  RUSTUP_WINDOWS_PATH_ADD_BIN: 1
  # Change to specific Rust release to pin
  rust_stable: stable
  rust_nightly: nightly-2025-01-25
  rust_toolchain: '1.84'
  rust_min: '1.80'

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  # Depends on all actions that are required for a "successful" CI run.
  tests-pass:
    name: all tests pass
    runs-on: ubuntu-latest
    needs:
      - format
      - clippy
      - docs
      - test
      - test-min
    steps:
      - run: exit 0

  format:
    name: check-format
    runs-on: ubuntu-latest
    steps:
      - run: sudo snap install --edge --classic just
      - uses: actions/checkout@v4
      - name: Install Rust ${{ env.rust_nightly }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_nightly }}
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: "just check-format"
        run: just check-format    

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - run: sudo snap install --edge --classic just
      - uses: actions/checkout@v4
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
      - name: Install Rust ${{ env.rust_toolchain }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_toolchain }}
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: "just check-clippy"
        run: just check-clippy
        env:
          TEST_OPENFGA_CLIENT_GRPC_URL: http://localhost:36081

  docs:
    name: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust ${{ env.rust_nightly }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_nightly }}
      - uses: Swatinem/rust-cache@v2
      - name: "doc --lib --all-features"
        run: |
          cargo doc --lib --no-deps --all-features --document-private-items
        env:
          RUSTFLAGS: --cfg docsrs ${{ matrix.run.RUSTFLAGS }}
          RUSTDOCFLAGS: --cfg docsrs -Dwarnings ${{ matrix.run.RUSTDOCFLAGS }}
        
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - run: sudo snap install --edge --classic just
      - uses: actions/checkout@v4
      - name: Install Rust ${{ env.rust_stable }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_stable }}
      - uses: Swatinem/rust-cache@v2
      - name: Setup openfga
        run: docker run -d -p 36081:8081 openfga/openfga:v1.8 run
      - name: "just test"
        run: just test
        env:
          RUSTFLAGS: ${{ env.RUSTFLAGS }}
          RUST_BACKTRACE: ${{ env.RUST_BACKTRACE }}
          TEST_OPENFGA_CLIENT_GRPC_URL: http://localhost:36081

  test-min:
    name: test-min
    runs-on: ubuntu-latest
    steps:
      - run: sudo snap install --edge --classic just
      - uses: actions/checkout@v4
      - name: Install Rust ${{ env.rust_min }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_min }}
      - uses: Swatinem/rust-cache@v2
      - name: Setup openfga
        run: docker run -d -p 36081:8081 openfga/openfga:v1.8 run
      - name: "just test"
        run: just test
        env:
          RUSTFLAGS: ${{ env.RUSTFLAGS }}
          RUST_BACKTRACE: ${{ env.RUST_BACKTRACE }}
          TEST_OPENFGA_CLIENT_GRPC_URL: http://localhost:36081
